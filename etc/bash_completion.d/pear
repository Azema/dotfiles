# pear(1) completion

#have pear && 
#{
_pear() {
    local i c=1 command
	local cur words cword prev
	_get_comp_words_by_ref -n =: cur words cword prev

    COMPREPLY=()

	while [ $c -lt $cword ]; do
		i="${words[c]}"
		case "$i" in
		*) command="$i"; break ;;
		esac
		((c++))
	done

    if [[ -n "$command" ]]&&[[ "$cur" == -* ]]; then
        APWORDS=$(pear help $command | \
            awk '{ for (i=1; i<=NF;i++) { if ( $i ~ /-.*$/ ) { print $i; } } }' | \
        sed 's/,//g')
        COMPREPLY=( $( compgen -W "$APWORDS" -- "$cur" ) )
    elif [[ "$cur" == -* ]]; then
	    APWORDS=$(pear help options | \
		awk '{ for (i=1; i<=NF;i++) { if ( $i ~ /-.*$/ ) { print $i; } } }' | \
        sed 's/,//g')
        COMPREPLY=( $( compgen -W "$APWORDS" -- "$cur" ) )
    else
        APWORDS=$(pear help | \
            awk 'NR>1{ if ( $1 !~ /^(Usage|Type)+/ ) print $1; }')
        COMPREPLY=( $( compgen -W "$APWORDS" -- "$cur" ) )
    fi
    return 0
}

complete -o bashdefault -o default -o nospace -F _pear pear 2>/dev/null \
    || complete -o default -o nospace -F _pear pear
#}

# Local variables:
# mode: shell-script
# sh-basic-offset: 4
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh
